% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/os_ttest.R
\name{os_ttest}
\alias{os_ttest}
\title{one step ttest modified from infer package}
\usage{
os_ttest(
  x,
  formula,
  response = NULL,
  explanatory = NULL,
  order = NULL,
  alternative = "two-sided",
  mu = 0,
  conf_int = TRUE,
  conf_level = 0.95,
  ...
)
}
\arguments{
\item{x}{A data frame that can be coerced into a [tibble][tibble::tibble].}

\item{formula}{A formula with the response variable on the left and the
explanatory on the right.}

\item{response}{The variable name in `x` that will serve as the response.
This is alternative to using the `formula` argument.}

\item{explanatory}{The variable name in `x` that will serve as the
explanatory variable.}

\item{order}{A string vector of specifying the order in which the levels of
the explanatory variable should be ordered for subtraction, where `order =
c("first", "second")` means `("first" - "second")`.}

\item{alternative}{Character string giving the direction of the alternative
hypothesis. Options are `"two-sided"` (default), `"greater"`, or `"less"`.}

\item{mu}{A numeric value giving the hypothesized null mean value for a one
sample test and the hypothesized difference for a two sample test.}

\item{conf_int}{A logical value for whether to include the confidence
interval or not. `TRUE` by default.}

\item{conf_level}{A numeric value between 0 and 1. Default value is 0.95.}

\item{...}{For passing in other arguments to [t.test()][stats::t.test()].}
}
\description{
A tidier version of [t.test()][stats::t.test()] for two sample tests.
}
\examples{
library(tidyr)
data(gss, package = "infer")

# t test for number of hours worked per week
# by college degree status
gss \%>\%
   tidyr::drop_na(college) \%>\%
   os_ttest(formula = hours ~ college,
      order = c("degree", "no degree"),
      alternative = "two-sided")

# see vignette("infer") for more explanation of the
# intuition behind the infer package, and vignette("os_ttest")
# for more examples of t-tests using infer

}
\concept{wrapper functions}
